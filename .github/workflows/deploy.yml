# based on https://github.com/sitek94/vite-deploy-demo
# versions edited... and using pnpm
name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest
    
    steps:
      # https://github.com/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@v3
      
      # https://github.com/actions/setup-node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      # https://github.com/bahmutov/npm-install
      # not sure why a special package
      # - name: Install dependencies
      #   uses: bahmutov/npm-install@v1
      
      # - name: Build project
      #   run: npm run build

      # trying pnpm install with cache instead
      # https://github.com/pnpm/action-setup
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          # https://www.npmjs.com/package/pnpm. 
          # at the time of writing ersion 7.29.1
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install      
      
      - name: Build project
        run: pnpm run build

      # https://github.com/actions/upload-artifact
      - name: Upload production-ready build files
        uses: actions/upload-artifact@v2
        with:
          name: production-files
          path: ./dist

# Not deploying right now  
  # deploy:
  #   name: Deploy
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
    
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: production-files
  #         path: ./dist
      
  #     - name: Deploy to GitHub Pages
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./dist
